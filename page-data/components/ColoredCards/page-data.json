{"componentChunkName":"component---src-templates-docs-js","path":"/components/ColoredCards","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Thousand Lights | Pipesort","docsLocation":"https://github.com/pipesort/thousand-lights-website/tree/master"}},"mdx":{"id":"7247afaf-2f38-5674-9cfe-ffd278a41213","fields":{"id":"7247afaf-2f38-5674-9cfe-ffd278a41213","title":"Colored Cards","slug":"/components/ColoredCards"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Colored Cards\",\n  \"metaTitle\": \"Colored Cards\",\n  \"metaDescription\": \"List of cards that can be configured completely to fit your design\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"List of colored Cards that can be configured to fit your design.\"), mdx(Images, {\n    src: coloredCards,\n    mdxType: \"Images\"\n  }), mdx(\"h2\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import ColoredCards from \\\"react-native-lights\\\";\\n\\nconst ColoredCards = () => {\\n     const cardItems = [\\n        {\\n          title: 'Colored cards ',\\n          description: 'You can add a list of colored cards',\\n          buttonTitle: 'Get Started',\\n          backgroundColor: 'green',\\n          buttonFunction: function(){\\n              console.log(\\\"Thousand Lights\\\")\\n          }\\n        },\\n        {\\n            title: 'Pintest cards',\\n            description: 'Pinterest style can that can be used with ease',\\n            buttonTitle: 'Get Started',\\n            backgroundColor: 'Pink',\\n            buttonFunction: function(){\\n              Alert.alert(\\\"Thank You\\\", \\\"for choosing Thousand Lights!\\\", [{text:\\\"Welcome\\\"}])\\n          },\\n           {\\n            title: 'You can also check out',\\n            description: 'Bottomsheet, Input',\\n            buttonTitle: 'Get Started',\\n            backgroundColor: 'blue',\\n            buttonFunction: function(){\\n              Alert.alert(\\\"Thank You\\\", \\\"for choosing Thousand Lights!\\\", [{text:\\\"Welcome\\\"}])\\n          },\\n      ];\\n  return (\\n    <View style={{flex:1}}\\n    <ColoredCards data={cardItems} />\\n    </View>\\n  );\\n};\\n\\n\")), mdx(\"h2\", null, \"Props\"), mdx(Table, {\n    data: cardData.coloredCards,\n    mdxType: \"Table\"\n  }), mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#usage","title":"Usage"},{"url":"#props","title":"Props"}]},"parent":{"__typename":"File","id":"0b062555-f9d0-587e-b13b-f6554fcd1db8","relativePath":"components/ColoredCards.mdx"},"frontmatter":{"metaTitle":"Colored Cards","metaDescription":"List of cards that can be configured completely to fit your design"}},"allMdx":{"edges":[{"node":{"id":"c7975842-6b78-53d5-bd5d-2e49ee357c26","fields":{"slug":"/components","title":"Components"}}},{"node":{"id":"8ba63bcd-051b-5b33-8838-aedeeb7a0f08","fields":{"slug":"/gettingStarted","title":"Getting Started"}}},{"node":{"id":"918d5854-4d48-57a9-b4ee-d6daf09b1b65","fields":{"slug":"/components/BottomSheet","title":"BottomSheet"}}},{"node":{"id":"f3f88ab6-da99-5a7f-9ccb-6386c2353d64","fields":{"slug":"/components/CardSlider","title":"Card Slider"}}},{"node":{"id":"7247afaf-2f38-5674-9cfe-ffd278a41213","fields":{"slug":"/components/ColoredCards","title":"Colored Cards"}}},{"node":{"id":"eb124bf9-25e6-5bbe-af94-4ef7a1b71bf2","fields":{"slug":"/components/input","title":"Input"}}},{"node":{"id":"cc26f932-5043-57e3-8a1c-6df0a6c62ee2","fields":{"slug":"/components/PinterestCards","title":"Pinterest Cards"}}},{"node":{"id":"de98b513-c8cd-58c1-987c-090f75958029","fields":{"slug":"/components/SelectBox","title":"Select Box [BottomSheet]"}}}]}},"pageContext":{"id":"7247afaf-2f38-5674-9cfe-ffd278a41213"}}}